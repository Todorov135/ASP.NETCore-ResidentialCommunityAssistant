@model IEnumerable<ApartamentViewModel>
@{
    var claimsValues = User.Claims.FirstOrDefault(c => c.Type == "HomeManagerOfAddresses");
}

<h2>All Apartamets</h2>

@foreach (var apartament in Model)
{
    <div class="card-body text-center border">
        <h6>Апартамент: @apartament.Signature - @apartament.Number</h6>      
        @if (string.IsNullOrWhiteSpace(apartament.Owner))
        {
            <p>Собственик: Апартаментът няма добавен собственик.</p>
            <a asp-controller="HomeManager" asp-action="SendRequestToHomeManager" class="btn btn-primary mb-2">Аз съм собственикът!</a>
        }
        else
        {
            if (!string.IsNullOrWhiteSpace(apartament.Owner))
            {
                <p>Собственик: @apartament.Owner</p>                
            }
        }
        @{
            if (claimsValues != null)
            {
                var claims = claimsValues.Value.Split(", ");

                bool isThisUserIsManagerOfCurrentAddress = false;
                for (int i = 0; i < claims.Length; i++)
                {
                    if (string.IsNullOrWhiteSpace(claims[i]))
                    {
                        continue;
                    }
                    int parsedClaim = int.Parse(claims[i]);
                    if (parsedClaim == apartament.AddressId)
                    {
                        isThisUserIsManagerOfCurrentAddress = true;
                        break;
                    }
                }

                if (this.User.Identity.IsAuthenticated && isThisUserIsManagerOfCurrentAddress)
                {
                    <form class="input-group-sm " asp-controller="HomeManager" asp-action="EditApartament" asp-route-id="@apartament.ApartamentId" method="get">
                        <input type="submit" value="Промяна" class="btn btn-primary mb-2" />
                    </form>
                    <a class="btn btn-primary" href="@Url.Action("RemoveUserFromAddress", "HomeManager", new { apartamentId = apartament.ApartamentId})">Премахни потребител</a>
                }
            }
            
        }
    </div>  
}
@if (claimsValues != null)
{
    <button id="addApartamentBtn">Добави апартамент</button>
    <div id="addApartamentContainer" style="display:none">
        <div id="addApartamentSpecifics">
            <input type="text" id="signature" placeholder="Сигнатура на апартамент">
            <input type="number" id="number" placeholder="Номер на апартамент">
            <button id="saveButton">Запази</button>
        </div>
    </div>
}

<script>
    let addApBtn = document.getElementById(addApartamentBtn);
    addApBtn.addEventListener('click, addApartamentSpecific)

       function addApartamentSpecific(event) {
           //if (event) {
           //    event.preventDefault();
           //}


           let addContainer = document.getElementById('addApartamentContainer');
           addContainer.style.display = 'block';
       }
</script>